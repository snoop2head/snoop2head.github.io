{"version":3,"sources":["webpack:///./src/components/TableOfContents.js","webpack:///./src/components/Markdown.js","webpack:///./src/components/Utterances.js","webpack:///./src/components/Navigator.js","webpack:///./src/components/ShareButtons.js"],"names":["TableOfContents","toc","currentHeaderUrl","isDarkMode","useContext","ThemeContext","css","darkModeColor","mainColor1","mainColor2","mainColor3","whiteModeColor","dangerouslySetInnerHTML","__html","Markdown","html","MarkdownCSS","textColor1","className","Utterances","repo","rootElm","React","createRef","useEffect","utterances","document","createElement","utterancesConfig","src","theme","label","async","crossorigin","Object","keys","forEach","configKey","setAttribute","current","innerHTML","appendChild","ref","Wrapper","Button","Navigator","pageContext","previous","next","to","fields","slug","rel","frontmatter","title","length","substring","timeId1","timeId2","ShareButton","color","icon","target","onClick","ShareButtons","url","text","useState","visible","end","isCopy","setIsCopy","leftIn","keyframes","leftOut","window","open","encodeURI","copyText","value","body","select","setSelectionRange","execCommand","removeChild","clearTimeout","setTimeout"],"mappings":"8NA8FeA,IAzFS,SAAC,GAA+B,IAA7BC,EAA4B,EAA5BA,IAAKC,EAAuB,EAAvBA,iBACtBC,EAAeC,qBAAWC,KAA1BF,WACR,OAAOF,EACL,8BACE,mBACEK,IAAKA,YAAF,6jBAkCKH,EACEI,gBAAcC,WACd,IACAD,gBAAcE,WACd,IACAF,gBAAcG,WACdC,iBAAeH,WACf,IACAG,iBAAeF,WACf,IACAE,iBAAeD,WA5CtB,8BAkDH,mBAAKJ,IAAG,GACN,kBACEA,IAAKA,YAAF,4DAECH,EAAU,8IAFX,MADL,OAQA,mBACEG,IAAKA,YAAF,gDAKUH,EAAa,UAAY,UALnC,kKAWiBD,EAXjB,8BAaUC,EAAa,UAAY,UAbnC,MAgBHS,wBAAyB,CAAEC,OAAQZ,QAKzC,O,wFCuFSa,IA7KE,SAAC,GAAc,IAAZC,EAAW,EAAXA,KACVZ,EAAeC,qBAAWC,KAA1BF,WACFa,EAAcV,YAAH,2HAULH,EAAa,OAAS,OAVjB,qQA4CJA,EACLI,gBAAcU,WACdN,iBAAeM,WA9CN,gRA0EOd,EAAa,OAAS,OA1E7B,4FA+EGA,EACZI,gBAAcE,WACdE,iBAAeF,WAjFN,mRAqGGN,EACZI,gBAAcE,WACdE,iBAAeF,WAvGN,2CA0GON,EAAa,OAAS,OA1G7B,yBA6GOA,EAAa,OAAS,OA7G7B,yPA+HJA,EACLI,gBAAcU,WACdN,iBAAeM,WAjIN,qBAkIOd,EAAa,OAAS,OAlI7B,kLAkJTA,EACEI,gBAAcC,WACd,IACAD,gBAAcE,WACd,IACAF,gBAAcG,WACdC,iBAAeH,WACf,IACAG,iBAAeF,WACf,IACAE,iBAAeD,WA5JR,QAgKjB,OACE,uBACE,mBACEJ,IAAKU,EACLE,UAAU,WACVN,wBAAyB,CAAEC,OAAQE,Q,oCC5K3C,iDAqCeI,IA9BI,SAAC,GAAc,IAAZC,EAAW,EAAXA,KACdC,EAAUC,IAAMC,YACdpB,EAAeC,qBAAWC,KAA1BF,WAyBR,OAvBAqB,qBAAU,WACR,IAAMC,EAAaC,SAASC,cAAc,UACpCC,EAAmB,CACvBC,IAXM,gCAYNT,OACAU,MAAO3B,EAZM,cACC,eAYd4B,MAAO,YACPC,OAAO,EACP,aAAc,QACdC,YAAa,aAGfC,OAAOC,KAAKP,GAAkBQ,SAAQ,SAACC,GACrCZ,EAAWa,aAAaD,EAAWT,EAAiBS,OAElDhB,EAAQkB,UACVlB,EAAQkB,QAAQC,UAAY,GAC5BnB,EAAQkB,QAAQE,YAAYhB,MAI7B,CAACtB,IAEG,mBAAKe,UAAU,aAAawB,IAAKrB,M,0HC3B1C,IAAMsB,EAAO,wOAEPC,EAAM,6I,0kBAuGGC,IArGG,SAAC,GAAqB,IAAnBC,EAAkB,EAAlBA,YACX3C,EAAeC,qBAAWC,KAA1BF,WACA4C,EAAmBD,EAAnBC,SAAUC,EAASF,EAATE,KAClB,OACE,YAACL,EAAD,KACE,YAACC,EAAD,KACGG,GACC,YAAC,OAAD,CACEzC,IAAKA,YAAF,iKAQmBH,EAAa,OAAS,OARzC,6DAWeA,EACZI,gBAAcE,WACdE,iBAAeF,WAblB,6BAeqBN,EAAa,OAAS,OAf3C,MAkBH8C,GAAIF,EAASG,OAAOC,KACpBC,IAAI,QAEJ,mBAAK9C,IAAG,GACN,YAAC,IAAD,CAAoBA,IAAG,KAEzB,mBAAKA,IAAG,GACN,iBACEA,IAAKA,YAAF,SACQH,EACLI,gBAAcU,WACdN,iBAAeM,WAHlB,MADL,iBASA,qBACG8B,EAASM,YAAYC,MAAMC,OAAS,GAC9BR,EAASM,YAAYC,MAAME,UAAU,EAAG,IAD9C,MAEGT,EAASM,YAAYC,UAMnC,YAACV,EAAD,KACGI,GACC,YAAC,OAAD,CACE1C,IAAKA,YAAF,gKAQmBH,EAAa,OAAS,OARzC,8DAWeA,EACZI,gBAAcE,WACdE,iBAAeF,WAblB,6BAeqBN,EAAa,OAAS,OAf3C,MAkBH8C,GAAID,EAAKE,OAAOC,KAChBC,IAAI,QAEJ,mBAAK9C,IAAG,GACN,iBACEA,IAAKA,YAAF,SACQH,EACLI,gBAAcU,WACdN,iBAAeM,WAHlB,MADL,aASA,qBACG+B,EAAKK,YAAYC,MAAMC,OAAS,GAC1BP,EAAKK,YAAYC,MAAME,UAAU,EAAG,IAD1C,MAEGR,EAAKK,YAAYC,QAGzB,mBAAKhD,IAAG,GACN,YAAC,IAAD,CAAqBA,IAAG,U,0CC/FlCmD,EAASC,E,oFAEb,IAAMC,EAAc,SAAC,GAAsC,IAApCC,EAAmC,EAAnCA,MAAOC,EAA4B,EAA5BA,KAAMC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC1C,OACE,sBACEzD,IAAKA,YAAF,wQAEmBsD,EAFnB,IAIHG,QAASA,GAERF,EAPH,cAQcC,I,ygBA0HHE,IArHM,SAAC,GAAmB,IAAjBC,EAAgB,EAAhBA,IAAKC,EAAW,EAAXA,KACnB/D,EAAeC,qBAAWC,KAA1BF,WACR,EAA4BgE,mBAAS,CACnCC,SAAS,EACTC,KAAK,IAFAC,EAAP,KAAeC,EAAf,KA2CMC,EAASC,YAAH,qPAeNC,EAAUD,YAAH,mYAkBb,OACE,uBACE,mBAAKnE,IAAG,GACN,YAAC,IAAD,CAASsD,OAAK,KAEhB,mBAAKtD,IAAG,GACN,YAACqD,EAAD,CACEC,MAAO,UACPC,KAAM,YAAC,IAAD,CAAWvD,IAAG,IACpBwD,OAAQ,UACRC,QAjFe,WACrBY,OAAOC,KAAP,iCACmCC,UAAUA,UAAUZ,IADvD,SACqEC,EACnE,SACA,8CA+EE,YAACP,EAAD,CACEC,MAAO,UACPC,KAAM,YAAC,IAAD,CAAQvD,IAAG,IACjBwD,OAAQ,MACRC,QA/EW,WACjB,IAAMe,EAAWpD,SAASC,cAAc,SACxCmD,EAASC,MAAQd,EAEjBvC,SAASsD,KAAKvC,YAAYqC,GAC1BA,EAASG,SACTH,EAASI,kBAAkB,EAAG,OAC9BxD,SAASyD,YAAY,QACrBzD,SAASsD,KAAKI,YAAYN,GAE1BP,EAAU,CACRH,SAAS,EACTC,KAAK,IAEPgB,aAAa5B,GACb4B,aAAa3B,GACbD,EAAU6B,YAAW,WACnBf,EAAU,CACRH,SAAS,EACTC,KAAK,MAEN,MACHX,EAAU4B,YAAW,WACnBf,EAAU,CACRH,SAAS,EACTC,KAAK,MAEN,SAuDAC,EAAOF,SACN,mBACE9D,IAAKA,YAAF,aACYgE,EAAOD,IAAMK,EAAUF,EADnC,waAIiBrE,EACdI,gBAAcE,WACdE,iBAAeF,WANlB,mBAUH,YAAC,IAAD,CAAQH,IAAG,IACX,mBAAKA,IAAG,GAAR","file":"e5f5b259f3bc5bd31060582de6626886320e23cc-d5bac5a70fb9afd8742c.js","sourcesContent":["import React, { useContext } from \"react\"\nimport { whiteModeColor, darkModeColor } from \"../../them-color\"\nimport ThemeContext from \"../lib/context/ThemContext\"\nimport tw, { css } from \"twin.macro\"\n\nconst TableOfContents = ({ toc, currentHeaderUrl }) => {\n  const { isDarkMode } = useContext(ThemeContext)\n  return toc ? (\n    <>\n      <div\n        css={css`\n          ::-webkit-scrollbar {\n            width: 4px;\n          }\n          ::-webkit-scrollbar-track {\n            background-color: transparent;\n          }\n          ::-webkit-scrollbar-thumb {\n            border-radius: 9999px;\n            background-color: gray;\n          }\n          ::-webkit-scrollbar-button {\n            width: 0;\n            height: 0;\n          }\n          /* Firefox scrollbar */\n          scrollbar-width: thin;\n          scrollbar-color: gray transparent;\n          display: none;\n          @media screen and (min-width: 1280px) {\n            float: right;\n            position: sticky;\n            top: 100px;\n            width: calc((100vw - 720px) / 2 - 80px);\n            max-width: 250px;\n            margin-right: 1rem;\n            overflow: auto;\n            word-break: break-word;\n            max-height: calc(100vh - 200px);\n            fontsize: 1rem;\n            display: flex;\n            border-left-width: 4px;\n            border-image: linear-gradient(\n              180deg,\n              ${isDarkMode\n                ? darkModeColor.mainColor1 +\n                  \",\" +\n                  darkModeColor.mainColor2 +\n                  \",\" +\n                  darkModeColor.mainColor3\n                : whiteModeColor.mainColor1 +\n                  \",\" +\n                  whiteModeColor.mainColor2 +\n                  \",\" +\n                  whiteModeColor.mainColor3}\n            );\n            border-image-slice: 1;\n          }\n        `}\n      >\n        <div css={tw`mx-4`}>\n          <h3\n            css={css`\n              ${tw`font-bold mb-2 text-lg mb-2`}\n              ${isDarkMode ? tw`text-gray-400` : tw`text-gray-700`};\n            `}\n          >\n            TOC\n          </h3>\n          <div\n            css={css`\n              ul {\n                margin-left: 0.5rem;\n              }\n              ul > li a:hover {\n                color: ${isDarkMode ? \"#DDDDDD\" : \"#555555\"};\n              }\n              ul > li a {\n                transition: all 300ms cubic-bezier(0.4, 0, 0.2, 1);\n                ${tw`text-gray-500 text-sm`}\n              }\n              ul > li a[href=\"${currentHeaderUrl}\"] {\n                font-size: 0.95rem;\n                color: ${isDarkMode ? \"#DDDDDD\" : \"#555555\"};\n              }\n            `}\n            dangerouslySetInnerHTML={{ __html: toc }}\n          ></div>\n        </div>\n      </div>\n    </>\n  ) : null\n}\n\nexport default TableOfContents\n","import React, { useContext } from \"react\"\nimport { css } from \"twin.macro\"\nimport ThemeContext from \"../lib/context/ThemContext\"\nimport { whiteModeColor, darkModeColor } from \"../../them-color\"\n\nconst Markdown = ({ html }) => {\n  const { isDarkMode } = useContext(ThemeContext)\n  const MarkdownCSS = css`\n    font-size: 1rem;\n    word-break: break-word;\n\n    h1 > a > svg,\n    h2 > a > svg,\n    h3 > a > svg,\n    h4 > a > svg,\n    h5 > a > svg,\n    h6 > a > svg {\n      fill: ${isDarkMode ? \"#fff\" : \"#000\"};\n    }\n\n    h1,\n    h2 {\n      font-size: 1.25rem;\n      font-weight: 600;\n      margin-top: 1.5rem;\n      margin-bottom: 1.5rem;\n    }\n    h3,\n    h4,\n    h5,\n    h6 {\n      font-size: 1.125rem;\n      margin-top: 1.5rem;\n      margin-bottom: 1.5rem;\n      font-weight: 600;\n    }\n\n    @media (min-width: 640px) {\n      h1,\n      h2 {\n        font-size: 1.5rem;\n      }\n      h3,\n      h4,\n      h5,\n      h6 {\n        font-size: 1.25rem;\n      }\n    }\n\n    a {\n      color: ${isDarkMode\n        ? darkModeColor.textColor1\n        : whiteModeColor.textColor1};\n    }\n    a:hover {\n      text-decoration: underline;\n    }\n    p {\n      margin: 0.3rem;\n      margin-top: 0.75rem;\n      margin-bottom: 0.75rem;\n    }\n    ul,\n    ol {\n      margin: 0.3rem;\n      margin-left: 2rem;\n    }\n    li > p,\n    li > ul,\n    li > ol {\n      margin-bottom: 0;\n    }\n    ol {\n      list-style-type: decimal;\n    }\n    ul {\n      list-style-type: disc;\n    }\n    blockquote {\n      padding: 0.5rem;\n      background-color: ${isDarkMode ? \"#333\" : \"#eee\"};\n      margin: 0.3rem;\n      margin-top: 0.5rem;\n      margin-bottom: 0.5rem;\n      border-left-width: 4px;\n      border-color: ${isDarkMode\n        ? darkModeColor.mainColor2\n        : whiteModeColor.mainColor2};\n    }\n    blockquote > p {\n      margin: 0.5rem;\n    }\n    blockquote > h1,\n    blockquote > h2,\n    blockquote > h3,\n    blockquote > h4,\n    blockquote > h5 {\n      margin-top: 0.5rem;\n      margin-bottom: 0.5rem;\n    }\n    td,\n    th {\n      padding-left: 0.5rem;\n      padding-right: 0.5rem;\n      padding-top: 0.25rem;\n      padding-bottom: 0.25rem;\n      border-width: 1px;\n      border-color: ${isDarkMode\n        ? darkModeColor.mainColor2\n        : whiteModeColor.mainColor2};\n    }\n    tr:nth-of-type(even) {\n      background-color: ${isDarkMode ? \"#333\" : \"#eee\"};\n    }\n    th {\n      background-color: ${isDarkMode ? \"#333\" : \"#eee\"};\n    }\n    table {\n      margin-bottom: 1.5rem;\n      display: block;\n      max-width: fit-content;\n      margin: 0 auto;\n      overflow-x: auto;\n      white-space: nowrap;\n    }\n\n    p > code,\n    li > code {\n      padding-top: 0.1rem;\n      padding-bottom: 0.1rem;\n      padding-right: 0.25rem;\n      padding-left: 0.25rem;\n      border-radius: 0.25rem;\n      color: ${isDarkMode\n        ? darkModeColor.textColor1\n        : whiteModeColor.textColor1};\n      background-color: ${isDarkMode ? \"#333\" : \"#eee\"};\n      white-space: pre-line;\n    }\n\n    pre.grvsc-container {\n      margin-top: 24px;\n      margin-bottom: 24px;\n    }\n\n    hr {\n      margin-top: 24px;\n      margin-bottom: 24px;\n      height: 2px;\n      border: none;\n      background: linear-gradient(\n        270deg,\n        ${isDarkMode\n          ? darkModeColor.mainColor1 +\n            \",\" +\n            darkModeColor.mainColor2 +\n            \",\" +\n            darkModeColor.mainColor3\n          : whiteModeColor.mainColor1 +\n            \",\" +\n            whiteModeColor.mainColor2 +\n            \",\" +\n            whiteModeColor.mainColor3}\n      );\n    }\n  `\n  return (\n    <div>\n      <div\n        css={MarkdownCSS}\n        className=\"markdown\"\n        dangerouslySetInnerHTML={{ __html: html }}\n      />\n    </div>\n  )\n}\n\nexport default Markdown\n","import React, { useEffect, useContext } from \"react\"\nimport ThemeContext from \"../lib/context/ThemContext\"\n\nconst src = \"https://utteranc.es/client.js\"\nconst DARK_THEME = \"github-dark\"\nconst LIGHT_THEME = \"github-light\"\n\nconst Utterances = ({ repo }) => {\n  const rootElm = React.createRef()\n  const { isDarkMode } = useContext(ThemeContext)\n\n  useEffect(() => {\n    const utterances = document.createElement(\"script\")\n    const utterancesConfig = {\n      src,\n      repo,\n      theme: isDarkMode ? DARK_THEME : LIGHT_THEME,\n      label: \"💬Comment\",\n      async: true,\n      \"issue-term\": \"title\",\n      crossorigin: \"anonymous\",\n    }\n\n    Object.keys(utterancesConfig).forEach((configKey) => {\n      utterances.setAttribute(configKey, utterancesConfig[configKey])\n    })\n    if (rootElm.current) {\n      rootElm.current.innerHTML = \"\"\n      rootElm.current.appendChild(utterances)\n    }\n\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [isDarkMode])\n\n  return <div className=\"utterances\" ref={rootElm} />\n}\n\nexport default Utterances\n","import React, { useContext } from \"react\"\nimport tw, { css } from \"twin.macro\"\nimport { Link } from \"gatsby\"\nimport ThemeContext from \"../lib/context/ThemContext\"\nimport { darkModeColor, whiteModeColor } from \"../../them-color\"\nimport { AiOutlineArrowRight, AiOutlineArrowLeft } from \"react-icons/ai\"\n\nconst Wrapper = tw.div`flex flex-wrap-reverse mx-2 mt-4 md:flex-no-wrap md:justify-between`\n\nconst Button = tw.div`w-full md:w-1/2 m-2 md:m-4`\n\nconst Navigator = ({ pageContext }) => {\n  const { isDarkMode } = useContext(ThemeContext)\n  const { previous, next } = pageContext\n  return (\n    <Wrapper>\n      <Button>\n        {previous && (\n          <Link\n            css={css`\n              display: flex;\n              justify-content: flex-start;\n              transition: all 300ms cubic-bezier(0.4, 0, 0.2, 1);\n              text-align: left;\n              width: 100%;\n              height: 100%;\n              padding: 0.5rem;\n              background-color: ${isDarkMode ? \"#333\" : \"#eee\"};\n              border-radius: 0.25rem;\n              border-left-width: 4px;\n              border-color: ${isDarkMode\n                ? darkModeColor.mainColor2\n                : whiteModeColor.mainColor2};\n              &:hover {\n                background-color: ${isDarkMode ? \"#444\" : \"#ddd\"};\n              }\n            `}\n            to={previous.fields.slug}\n            rel=\"prev\"\n          >\n            <div css={tw`inline-flex content-center mr-4 ml-2 h-full`}>\n              <AiOutlineArrowLeft css={tw`w-8 h-8 my-auto`} />\n            </div>\n            <div css={tw`inline-block my-2`}>\n              <p\n                css={css`\n                  color: ${isDarkMode\n                    ? darkModeColor.textColor1\n                    : whiteModeColor.textColor1};\n                `}\n              >\n                Previous Post\n              </p>\n              <p>\n                {previous.frontmatter.title.length > 60\n                  ? `${previous.frontmatter.title.substring(0, 57)}...`\n                  : previous.frontmatter.title}\n              </p>\n            </div>\n          </Link>\n        )}\n      </Button>\n      <Button>\n        {next && (\n          <Link\n            css={css`\n              display: flex;\n              justify-content: flex-end;\n              transition: all 300ms cubic-bezier(0.4, 0, 0.2, 1);\n              text-align: right;\n              width: 100%;\n              height: 100%;\n              padding: 0.5rem;\n              background-color: ${isDarkMode ? \"#333\" : \"#eee\"};\n              border-radius: 0.25rem;\n              border-right-width: 4px;\n              border-color: ${isDarkMode\n                ? darkModeColor.mainColor2\n                : whiteModeColor.mainColor2};\n              &:hover {\n                background-color: ${isDarkMode ? \"#444\" : \"#ddd\"};\n              }\n            `}\n            to={next.fields.slug}\n            rel=\"next\"\n          >\n            <div css={tw`inline-block my-2`}>\n              <p\n                css={css`\n                  color: ${isDarkMode\n                    ? darkModeColor.textColor1\n                    : whiteModeColor.textColor1};\n                `}\n              >\n                Next Post\n              </p>\n              <p>\n                {next.frontmatter.title.length > 60\n                  ? `${next.frontmatter.title.substring(0, 57)}...`\n                  : next.frontmatter.title}\n              </p>\n            </div>\n            <div css={tw`inline-flex content-center mr-4 ml-2 h-full`}>\n              <AiOutlineArrowRight css={tw`w-8 h-8 my-auto`} />\n            </div>\n          </Link>\n        )}\n      </Button>\n    </Wrapper>\n  )\n}\n\nexport default Navigator\n","import React, { useContext, useState } from \"react\"\nimport tw, { css } from \"twin.macro\"\nimport { keyframes } from \"@emotion/core\"\nimport Divider from \"./Divider\"\nimport { FaTwitter, FaLink, FaInfo } from \"react-icons/fa\"\nimport { whiteModeColor, darkModeColor } from \"../../them-color\"\nimport ThemeContext from \"../lib/context/ThemContext\"\n\nvar timeId1, timeId2\n\nconst ShareButton = ({ color, icon, target, onClick }) => {\n  return (\n    <button\n      css={css`\n        ${tw`flex px-3 py-1 my-2 ml-2 rounded text-white`}\n        background-color: ${color}\n      `}\n      onClick={onClick}\n    >\n      {icon}\n      Share with {target}\n    </button>\n  )\n}\n\nconst ShareButtons = ({ url, text }) => {\n  const { isDarkMode } = useContext(ThemeContext)\n  const [isCopy, setIsCopy] = useState({\n    visible: false,\n    end: true,\n  })\n\n  const onTwitterClick = () => {\n    window.open(\n      `https://twitter.com/share?url=${encodeURI(encodeURI(url))}&text=${text}`,\n      \"sharer\",\n      \"toolbar=0,status=0,width=626,height=436\"\n    )\n  }\n\n  const onUrlClick = () => {\n    const copyText = document.createElement(\"input\")\n    copyText.value = url\n\n    document.body.appendChild(copyText)\n    copyText.select()\n    copyText.setSelectionRange(0, 99999)\n    document.execCommand(\"copy\")\n    document.body.removeChild(copyText)\n\n    setIsCopy({\n      visible: true,\n      end: false,\n    })\n    clearTimeout(timeId1)\n    clearTimeout(timeId2)\n    timeId1 = setTimeout(() => {\n      setIsCopy({\n        visible: true,\n        end: true,\n      })\n    }, 1500)\n    timeId2 = setTimeout(() => {\n      setIsCopy({\n        visible: false,\n        end: false,\n      })\n    }, 2000)\n  }\n\n  const leftIn = keyframes`\n  0% {\n    transform: translateX(-2000px) scale(0.7);\n    opacity: 0.7;\n  }\n  80% {\n    transform: translateX(0px) scale(0.7);\n    opacity: 0.7;\n  }\n  100% {\n    transform: scale(1);\n    opacity: 1;\n  }\n  `\n\n  const leftOut = keyframes`\n  0% {\n    -webkit-transform: scale(1);\n    transform: scale(1);\n    opacity: 1;\n  }\n  20% {\n    -webkit-transform: translateX(0px) scale(0.7);\n    transform: translateX(0px) scale(0.7);\n    opacity: 0.7;\n  }\n  100% {\n    -webkit-transform: translateX(-2000px) scale(0.7);\n    transform: translateX(-2000px) scale(0.7);\n    opacity: 0.7;\n  }\n  `\n\n  return (\n    <div>\n      <div css={tw`my-4`}>\n        <Divider color />\n      </div>\n      <div css={tw`flex flex-wrap justify-end mt-4 px-2`}>\n        <ShareButton\n          color={\"#1CA1F2\"}\n          icon={<FaTwitter css={tw`fill-current my-auto mr-1`} />}\n          target={\"Twitter\"}\n          onClick={onTwitterClick}\n        />\n        <ShareButton\n          color={\"#6E7783\"}\n          icon={<FaLink css={tw`fill-current my-auto mr-1`} />}\n          target={\"URL\"}\n          onClick={onUrlClick}\n        />\n      </div>\n      {isCopy.visible && (\n        <div\n          css={css`\n            animation: ${isCopy.end ? leftOut : leftIn} 500ms;\n            ${tw`fixed my-auto top-0 left-0 ml-4 mt-4`}\n            ${tw`inline-flex shadow items-center rounded text-white text-sm font-bold px-4 py-3`}\n          background-color: ${isDarkMode\n              ? darkModeColor.mainColor2\n              : whiteModeColor.mainColor2};\n            z-index: 9999;\n          `}\n        >\n          <FaInfo css={tw`fill-current mr-2`} />\n          <div css={tw`ml-2`}>Copied Link to your Clipboard!</div>\n        </div>\n      )}\n    </div>\n  )\n}\n\nexport default ShareButtons\n"],"sourceRoot":""}